import type { Meta, StoryObj } from '@storybook/react';
import NavigationMenu from './navigation-menu';

const meta = {
  title: 'UI/NavigationMenu',
  component: NavigationMenu,
  parameters: {
    layout: 'centered',
    docs: {
      description: {
        component: 'Enhanced Navigation Menu component with responsive design, keyboard navigation, and advanced accessibility features.',
      },
    },
  },
  argTypes: {
    mobile: {
      control: 'boolean',
      description: 'Enable mobile responsive navigation with hamburger menu',
    },
    loading: {
      control: 'boolean',
      description: 'Show loading state for async menu items',
    },
  },
};

export default meta;

// Create 4 core story categories:
export const AllVariants = {
  render: () => (
    <NavigationMenu>
      <NavigationMenu.List>
        <NavigationMenu.Item>
          <NavigationMenu.Trigger>Products</NavigationMenu.Trigger>
          <NavigationMenu.Content>
            <div className="grid gap-3 p-6 md:w-[400px] lg:w-[500px]">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <h4 className="font-medium leading-none mb-2">Web Development</h4>
                  <p className="text-sm text-muted-foreground">Modern web solutions</p>
                </div>
                <div>
                  <h4 className="font-medium leading-none mb-2">Mobile Apps</h4>
                  <p className="text-sm text-muted-foreground">Native and cross-platform</p>
                </div>
              </div>
            </div>
          </NavigationMenu.Content>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <NavigationMenu.Link href="/services">Services</NavigationMenu.Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <NavigationMenu.Link href="/about">About</NavigationMenu.Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <NavigationMenu.Link href="/contact">Contact</NavigationMenu.Link>
        </NavigationMenu.Item>
      </NavigationMenu.List>
    </NavigationMenu>
  ),
};

export const MobileVariant = {
  args: {
    mobile: true,
  },
  render: (args: any) => (
    <NavigationMenu {...args}>
      <NavigationMenu.List>
        <NavigationMenu.Item>
          <NavigationMenu.Trigger>Products</NavigationMenu.Trigger>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <NavigationMenu.Link href="/services">Services</NavigationMenu.Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <NavigationMenu.Link href="/about">About</NavigationMenu.Link>
        </NavigationMenu.Item>
      </NavigationMenu.List>
    </NavigationMenu>
  ),
};

export const InteractiveExample = {
  render: () => (
    <div className="w-full max-w-4xl">
      <NavigationMenu>
        <NavigationMenu.List>
          <NavigationMenu.Item>
            <NavigationMenu.Trigger className="navigation-menu__trigger">
              Getting started
            </NavigationMenu.Trigger>
            <NavigationMenu.Content>
              <div className="grid gap-3 p-6 md:w-[400px] lg:w-[500px] lg:grid-cols-[.75fr_1fr]">
                <div className="row-span-3">
                  <NavigationMenu.Link asChild>
                    <a
                      className="flex h-full w-full select-none flex-col justify-end rounded-md bg-gradient-to-b from-muted/50 to-muted p-6 no-underline outline-none focus:shadow-md"
                      href="/"
                    >
                      <div className="mb-2 mt-4 text-lg font-medium">
                        shadcn/ui
                      </div>
                      <p className="text-sm leading-tight text-muted-foreground">
                        Beautifully designed components built with Radix UI and
                        Tailwind CSS.
                      </p>
                    </a>
                  </NavigationMenu.Link>
                </div>
                <div className="grid gap-1">
                  <NavigationMenu.Link href="/docs/introduction">
                    Introduction
                  </NavigationMenu.Link>
                  <NavigationMenu.Link href="/docs/installation">
                    Installation
                  </NavigationMenu.Link>
                  <NavigationMenu.Link href="/docs/primitives/typography">
                    Typography
                  </NavigationMenu.Link>
                </div>
              </div>
            </NavigationMenu.Content>
          </NavigationMenu.Item>
          <NavigationMenu.Item>
            <NavigationMenu.Trigger>Components</NavigationMenu.Trigger>
            <NavigationMenu.Content>
              <div className="grid w-[400px] gap-3 p-4 md:w-[500px] md:grid-cols-2 lg:w-[600px]">
                {[
                  {
                    title: "Alert Dialog",
                    href: "/docs/primitives/alert-dialog",
                    description:
                      "A modal dialog that interrupts the user with important content and expects a response.",
                  },
                  {
                    title: "Hover Card",
                    href: "/docs/primitives/hover-card",
                    description:
                      "For sighted users to preview content available behind a link.",
                  },
                  {
                    title: "Progress",
                    href: "/docs/primitives/progress",
                    description:
                      "Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.",
                  },
                  {
                    title: "Scroll-area",
                    href: "/docs/primitives/scroll-area",
                    description: "Visually or semantically separates content.",
                  },
                  {
                    title: "Tabs",
                    href: "/docs/primitives/tabs",
                    description:
                      "A set of layered sections of content—known as tab panels—that are displayed one at a time.",
                  },
                  {
                    title: "Tooltip",
                    href: "/docs/primitives/tooltip",
                    description:
                      "A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.",
                  },
                ].map((component) => (
                  <div key={component.title} className="grid gap-1">
                    <NavigationMenu.Link
                      href={component.href}
                      className="block select-none space-y-1 rounded-md p-3 leading-none no-underline outline-none transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground"
                    >
                      <div className="text-sm font-medium leading-none">{component.title}</div>
                      <p className="line-clamp-2 text-sm leading-snug text-muted-foreground">
                        {component.description}
                      </p>
                    </NavigationMenu.Link>
                  </div>
                ))}
              </div>
            </NavigationMenu.Content>
          </NavigationMenu.Item>
          <NavigationMenu.Item>
            <NavigationMenu.Link href="/docs" className="navigation-menu__trigger">
              Documentation
            </NavigationMenu.Link>
          </NavigationMenu.Item>
        </NavigationMenu.List>
      </NavigationMenu>
    </div>
  ),
};

export const EnhancedFeatures = {
  args: {
    loading: true,
    mobile: false,
  },
  render: (args: any) => (
    <NavigationMenu {...args}>
      <NavigationMenu.List>
        <NavigationMenu.Item>
          <NavigationMenu.Link href="/home">Home</NavigationMenu.Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <NavigationMenu.Link href="/products">Products</NavigationMenu.Link>
        </NavigationMenu.Item>
        <NavigationMenu.Item>
          <NavigationMenu.Link href="/services">Services</NavigationMenu.Link>
        </NavigationMenu.Item>
      </NavigationMenu.List>
    </NavigationMenu>
  ),
};

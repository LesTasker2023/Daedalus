```
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃                    🎨 TRIGGERKINGS STYLE GUIDE CARD                      ┃
┃                    Keep this next to you while coding                    ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

┌─ 🎨 COLORS ──────────────────────────┬─ 📐 SPACING ───────────────────────┐
│ Primary: hsl(220, 14%, 96%)          │ 1: 0.25rem (4px)   5: 1.25rem (20px) │
│ Success: hsl(142, 76%, 36%) - Green  │ 2: 0.5rem (8px)    6: 1.5rem (24px)  │
│ Warning: hsl(32, 95%, 44%) - Orange  │ 3: 0.75rem (12px)  8: 2rem (32px)    │
│ Danger:  hsl(0, 84%, 60%) - Red      │ 4: 1rem (16px)     12: 3rem (48px)   │
│ Ring:    hsl(221, 83%, 53%) - Focus  │                                       │
└──────────────────────────────────────┴───────────────────────────────────────┘

┌─ 📏 SIZES ───────────────────────────┬─ ⚡ TRANSITIONS ────────────────────┐
│ sm:      2rem (32px)   text-sm       │ Fast:    150ms - hover, focus        │
│ default: 2.5rem (40px) text-base     │ Default: 200ms - standard            │
│ lg:      2.75rem (44px) text-lg      │ Slow:    300ms - complex             │
│ xl:      3rem (48px)   text-xl       │ Easing:  cubic-bezier(0.4,0,0.2,1)   │
└──────────────────────────────────────┴───────────────────────────────────────┘

┌─ 🎭 REQUIRED VARIANTS ───────────────┬─ 🚦 REQUIRED STATES ──────────────┐
│ ✅ variant: default, success,        │ ✅ loading: Show spinner           │
│            warning, danger           │ ✅ disabled: 50% opacity           │
│ ✅ size: sm, default, lg, xl         │ ✅ error: Red border               │
│                                      │ ✅ success: Green (if applicable)  │
└──────────────────────────────────────┴────────────────────────────────────┘

┌─ ♿ ACCESSIBILITY MUSTS ─────────────┬─ 📁 FILE STRUCTURE ───────────────┐
│ ✅ ARIA attributes                   │ ComponentName/                     │
│ ✅ Keyboard navigation               │ ├── component-name.tsx             │
│ ✅ Focus management                  │ ├── ComponentName.stories.tsx      │
│ ✅ Screen reader support             │ ├── ComponentName.test.tsx         │
│ ✅ High contrast mode                │ └── index.tsx                      │
└──────────────────────────────────────┴────────────────────────────────────┘

┌─ ⚙️ COMPONENT INTERFACE TEMPLATE ────────────────────────────────────────────┐
│                                                                              │
│ const variants = cva("component-base", {                                     │
│   variants: {                                                               │
│     variant: {                                                              │
│       default: "variant-default",                                           │
│       success: "variant-success",                                           │
│       warning: "variant-warning",                                           │
│       danger: "variant-danger",                                             │
│     },                                                                      │
│     size: {                                                                 │
│       sm: "size-sm",                                                        │
│       default: "size-default",                                              │
│       lg: "size-lg",                                                        │
│       xl: "size-xl",                                                        │
│     },                                                                      │
│   },                                                                        │
│   defaultVariants: { variant: "default", size: "default" },                │
│ })                                                                          │
│                                                                              │
│ interface Props extends React.ComponentPropsWithoutRef<"div">,              │
│   VariantProps<typeof variants> {                                           │
│   loading?: boolean                                                         │
│   disabled?: boolean                                                        │
│   error?: string                                                            │
│   children?: React.ReactNode                                                │
│ }                                                                           │
│                                                                              │
│ const Component = forwardRef<HTMLDivElement, Props>(                        │
│   ({ variant, size, loading, disabled, children, ...props }, ref) => {     │
│     if (loading) return <LoadingSpinner />                                  │
│     return (                                                                │
│       <div                                                                  │
│         ref={ref}                                                           │
│         className={cn(variants({ variant, size }))}                        │
│         aria-disabled={disabled}                                            │
│         {...props}                                                          │
│       >                                                                     │
│         {children}                                                          │
│       </div>                                                               │
│     )                                                                       │
│   }                                                                         │
│ )                                                                           │
│                                                                              │
│ Component.displayName = "Component"                                         │
│ export default Component                                                    │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 🧪 TESTING REQUIREMENTS (30+ tests) ──────────────────────────────────────┐
│ 1. Rendering (5-8 tests)           4. Enhanced Features (5-10 tests)       │
│ 2. Variants & Sizes (8-12 tests)   5. Edge Cases (3-5 tests)              │
│ 3. Events & Props (8-12 tests)     6. Accessibility (5+ tests)            │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 📚 STORYBOOK STORIES (10+ required) ──────────────────────────────────────┐
│ ✅ Default         ✅ AllSizes           ✅ InteractiveExample              │
│ ✅ AllVariants     ✅ LoadingState       ✅ AccessibilityDemo                │
│ ✅ DisabledState   ✅ ErrorState         ✅ ResponsiveDemo                   │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 🎯 QUALITY GATES ──────────────────────────────────────────────────────────┐
│ Grade A+: 90-100% = 🏆 Ship immediately     Grade C: 60-69% = 😐 Major fixes │
│ Grade A:  80-89%  = ✅ Ready to ship        Grade F: <60%   = ❌ Rework      │
│ Grade B:  70-79%  = ⚠️ Minor fixes needed                                   │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ 🚀 VALIDATION COMMANDS ────────────────────────────────────────────────────┐
│ yarn validate:component Button    # Validate specific component             │
│ yarn test Button                  # Run component tests                     │
│ yarn lint --fix                   # Fix linting issues                      │
│ yarn build                        # Check for build errors                  │
└──────────────────────────────────────────────────────────────────────────────┘

┌─ ⚡ QUICK CHECKLIST ────────────────────────────────────────────────────────┐
│ Before shipping ANY component:                                              │
│ □ All 4 color variants implemented    □ 30+ tests written and passing      │
│ □ All 4 size variants implemented     □ 10+ Storybook stories created       │
│ □ Loading state with spinner          □ Accessibility tested                │
│ □ Disabled state (50% opacity)        □ No console errors/warnings          │
│ □ Focus ring on interactive elements  □ Responsive on all screen sizes      │
│ □ Uses design tokens (hsl colors)     □ TypeScript interfaces complete      │
│ □ CVA for variant management           □ 80%+ validation score achieved     │
└──────────────────────────────────────────────────────────────────────────────┘

┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ 🎯 GOLDEN RULE: If it doesn't match this card, it's not ready to ship.    ┃
┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
```

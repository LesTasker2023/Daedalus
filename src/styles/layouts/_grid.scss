@use "../abstracts/functions" as *;
@use "../abstracts/variables" as *;

// Grid System
.grid {
  @include grid;

  &--2 {
    @include respond-to("md") {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  &--3 {
    @include respond-to("md") {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  &--4 {
    @include respond-to("lg") {
      grid-template-columns: repeat(4, 1fr);
    }
  }
}

// Container
.container {
  @include container;

  &--sm {
    max-width: 640px;
  }
  &--md {
    max-width: 768px;
  }
  &--lg {
    max-width: 1024px;
  }
  &--xl {
    max-width: 1280px;
  }
}

// Stack
.stack {
  @include flex(column);

  &--sm > * + * {
    margin-top: var(--spacing-2);
  }
  &--md > * + * {
    margin-top: var(--spacing-4);
  }
  &--lg > * + * {
    margin-top: var(--spacing-8);
  }
}

// Flex layouts
.flex {
  @include flex;

  &--col {
    flex-direction: column;
  }
  &--wrap {
    flex-wrap: wrap;
  }
  &--center {
    justify-content: center;
    align-items: center;
  }
  &--between {
    justify-content: space-between;
  }
  &--around {
    justify-content: space-around;
  }
}

// Section
.section {
  padding: var(--spacing-16) 0;

  &--sm {
    padding: var(--spacing-8) 0;
  }
  &--lg {
    padding: var(--spacing-20) 0;
  }
}

// Hidden utilities
.hidden {
  display: none !important;
}

@each $breakpoint in ("sm", "md", "lg", "xl") {
  @include respond-to($breakpoint) {
    .hidden-#{$breakpoint} {
      display: none !important;
    }
  }
}

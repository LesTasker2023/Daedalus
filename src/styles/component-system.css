/* ðŸŽ¯ Design System Enforcement */
/* This file enforces consistent styling across all components */

/* ===== COMPONENT BASE CLASSES ===== */

/* All interactive components should extend this */
.component-base {
  font-family: var(--font-family-base);
  font-size: var(--text-base);
  line-height: var(--leading-normal);
  border-radius: var(--radius);
  border: 1px solid hsl(var(--color-border));
  background-color: hsl(var(--color-background));
  color: hsl(var(--color-foreground));
  transition: var(--transition-default);
  
  /* Focus ring standard */
  &:focus-visible {
    outline: 2px solid hsl(var(--color-ring));
    outline-offset: 2px;
  }
  
  /* Disabled state standard */
  &:disabled,
  &[aria-disabled="true"] {
    opacity: 0.5;
    pointer-events: none;
    cursor: not-allowed;
  }
}

/* ===== SIZE VARIANTS ===== */

.size-sm {
  height: var(--height-sm);
  padding: var(--spacing-2) var(--spacing-3);
  font-size: var(--text-sm);
}

.size-default {
  height: var(--height-default);
  padding: var(--spacing-3) var(--spacing-4);
  font-size: var(--text-base);
}

.size-lg {
  height: var(--height-lg);
  padding: var(--spacing-4) var(--spacing-5);
  font-size: var(--text-lg);
}

.size-xl {
  height: var(--height-xl);
  padding: var(--spacing-5) var(--spacing-6);
  font-size: var(--text-xl);
}

/* ===== COLOR VARIANTS ===== */

.variant-default {
  background-color: hsl(var(--color-muted));
  color: hsl(var(--color-muted-foreground));
  border-color: hsl(var(--color-border));
  
  &:hover:not(:disabled) {
    background-color: hsl(var(--color-muted) / 0.8);
  }
}

.variant-success {
  background-color: hsl(var(--color-success));
  color: hsl(var(--color-success-foreground));
  border-color: hsl(var(--color-success));
  
  &:hover:not(:disabled) {
    background-color: hsl(var(--color-success) / 0.9);
  }
}

.variant-warning {
  background-color: hsl(var(--color-warning));
  color: hsl(var(--color-warning-foreground));
  border-color: hsl(var(--color-warning));
  
  &:hover:not(:disabled) {
    background-color: hsl(var(--color-warning) / 0.9);
  }
}

.variant-danger {
  background-color: hsl(var(--color-danger));
  color: hsl(var(--color-danger-foreground));
  border-color: hsl(var(--color-danger));
  
  &:hover:not(:disabled) {
    background-color: hsl(var(--color-danger) / 0.9);
  }
}

/* ===== OUTLINE VARIANTS ===== */

.variant-outline {
  background-color: transparent;
  color: hsl(var(--color-foreground));
  border-color: hsl(var(--color-border));
  
  &:hover:not(:disabled) {
    background-color: hsl(var(--color-muted));
  }
}

.variant-outline-success {
  background-color: transparent;
  color: hsl(var(--color-success));
  border-color: hsl(var(--color-success));
  
  &:hover:not(:disabled) {
    background-color: hsl(var(--color-success) / 0.1);
  }
}

.variant-outline-warning {
  background-color: transparent;
  color: hsl(var(--color-warning));
  border-color: hsl(var(--color-warning));
  
  &:hover:not(:disabled) {
    background-color: hsl(var(--color-warning) / 0.1);
  }
}

.variant-outline-danger {
  background-color: transparent;
  color: hsl(var(--color-danger));
  border-color: hsl(var(--color-danger));
  
  &:hover:not(:disabled) {
    background-color: hsl(var(--color-danger) / 0.1);
  }
}

/* ===== LOADING STATE ===== */

.state-loading {
  position: relative;
  color: transparent;
  pointer-events: none;
  
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: var(--icon-sm);
    height: var(--icon-sm);
    border: 2px solid currentColor;
    border-top-color: transparent;
    border-radius: var(--radius-full);
    animation: var(--animation-spin);
  }
}

/* Alternative loading with custom spinner */
.state-loading-with-spinner {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--spacing-2);
  
  .spinner {
    width: var(--icon-sm);
    height: var(--icon-sm);
    border: 2px solid hsl(var(--color-muted-foreground));
    border-top-color: transparent;
    border-radius: var(--radius-full);
    animation: var(--animation-spin);
  }
}

/* ===== ERROR STATES ===== */

.state-error {
  border-color: hsl(var(--color-danger));
  color: hsl(var(--color-danger));
  
  /* Error message styling */
  & + .error-message {
    margin-top: var(--spacing-1);
    font-size: var(--text-sm);
    color: hsl(var(--color-danger));
  }
}

.state-success {
  border-color: hsl(var(--color-success));
  color: hsl(var(--color-success));
}

/* ===== INTERACTIVE STATES ===== */

.interactive {
  cursor: pointer;
  user-select: none;
  
  &:hover:not(:disabled) {
    transform: translateY(-1px);
    box-shadow: var(--shadow-md);
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
    box-shadow: var(--shadow-sm);
  }
}

/* ===== FORM ELEMENTS ===== */

.form-element {
  width: 100%;
  border: 1px solid hsl(var(--color-border));
  border-radius: var(--radius);
  background-color: hsl(var(--color-background));
  color: hsl(var(--color-foreground));
  font-family: inherit;
  transition: var(--transition-default);
  
  &::placeholder {
    color: hsl(var(--color-muted-foreground));
  }
  
  &:focus {
    outline: none;
    border-color: hsl(var(--color-ring));
    box-shadow: 0 0 0 1px hsl(var(--color-ring));
  }
}

/* ===== RESPONSIVE UTILITIES ===== */

@media (max-width: 640px) {
  .component-base {
    font-size: var(--text-sm);
    padding: var(--spacing-2) var(--spacing-3);
  }
}

@media (min-width: 1024px) {
  .component-base {
    &:hover:not(:disabled) {
      transform: translateY(-2px);
      box-shadow: var(--shadow-lg);
    }
  }
}

/* ===== ANIMATION CLASSES ===== */

.fade-in {
  animation: var(--animation-fade-in);
}

.slide-in {
  animation: var(--animation-slide-in);
}

.scale-in {
  animation: var(--animation-scale-in);
}

/* ===== SPACING UTILITIES ===== */

.spacing-stack > * + * {
  margin-top: var(--spacing-4);
}

.spacing-inline > * + * {
  margin-left: var(--spacing-4);
}

/* ===== TYPOGRAPHY UTILITIES ===== */

.text-muted {
  color: hsl(var(--color-muted-foreground));
}

.text-error {
  color: hsl(var(--color-danger));
}

.text-success {
  color: hsl(var(--color-success));
}

.text-warning {
  color: hsl(var(--color-warning));
}

/* ===== SHADOW UTILITIES ===== */

.shadow-soft {
  box-shadow: var(--shadow-sm);
}

.shadow-medium {
  box-shadow: var(--shadow-md);
}

.shadow-strong {
  box-shadow: var(--shadow-lg);
}

/* ===== ACCESSIBILITY ENHANCEMENTS ===== */

@media (prefers-reduced-motion: reduce) {
  .component-base,
  .interactive {
    transition: none;
    animation: none;
  }
}

@media (prefers-contrast: high) {
  .component-base {
    border-width: 2px;
  }
  
  .component-base:focus-visible {
    outline-width: 3px;
  }
}

/* Screen reader only utility */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

/* ===== PRINT STYLES ===== */

@media print {
  .component-base {
    box-shadow: none;
    border: 1px solid #000;
    background: #fff !important;
    color: #000 !important;
  }
  
  .state-loading::after {
    display: none;
  }
}
